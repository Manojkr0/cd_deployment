pipeline {
    agent any

    tools {
        maven 'Maven 3.8.5' // Name from Jenkins Global Tool Config
        jdk 'jdk9'        // Name from Jenkins Global Tool Config
    }

    environment {
        ARTIFACTORY_SERVER_ID = 'jfrog-credentials' 
    }

    parameters {
        string(name: 'GIT_REPO_URL', description: 'Git repository URL to clone')
        string(name: 'BRANCH_NAME', description: 'Branch name to build')
    }

    stages {
        stage('Clone Repo') {
            steps {
                script {
                    git credentialsId: 'github-cred-id',
                        url: "${params.GIT_REPO_URL}",
                        branch: "${params.BRANCH_NAME}"
                }
            }
        }

        stage('Build & Deploy') {
            steps {
                script {
                    def server = Artifactory.server(ARTIFACTORY_SERVER_ID)

                    def buildInfo = server.mavenBuild(
                        tool: 'Maven 3.8.5',
                        pom: 'pom.xml',
                        goals: 'clean install deploy',
                        buildInfo: true,
                        resolver: [
                            repo: 'artifact1',
                            serverId: ARTIFACTORY_SERVER_ID
                        ],
                        deployer: [
                            repo: 'libs-release-local',
                            serverId: ARTIFACTORY_SERVER_ID
                        ]
                    )

                    server.publishBuildInfo(buildInfo)
                }
            }
        }
    }

    post {
        success {
            echo "✅ Build and deploy successful!"
        }
        failure {
            echo "❌ Pipeline failed. Check logs for details."
        }
    }
}
